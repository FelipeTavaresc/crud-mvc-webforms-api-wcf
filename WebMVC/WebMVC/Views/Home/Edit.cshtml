@model Core.Modelos.Cliente

@{
    ViewBag.Title = "Edit";
}

<h2> Cliente</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="modal-body">
    <h4>Cliente</h4>
    <div class="row ">
        <div class="form-group col-md-3">
            <label>CPF</label>
            @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return onlyNumbers(event)", @required = "required", @placeholder = "CPF", @maxlength = "11" } })
            @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-9">
            <label>Nome</label>
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @required = "required", @placeholder = "Nome", @maxlength = "150" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-3">
            <label>RG</label>
            @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control", @placeholder = "RG", @maxlength = "10" } })
            @Html.ValidationMessageFor(model => model.RG, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-3">
            <label>Data Expedição</label>
            @{ var dataExpedicao = Model.DataExpedicao?.ToString("yyyy-MM-dd"); }
            @Html.EditorFor(model => model.DataExpedicao, new { htmlAttributes = new { @value = dataExpedicao, @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.DataExpedicao, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-3">
            <label>Orgão Expedição</label>
            @Html.EditorFor(model => model.OrgaoExpedicao, new { htmlAttributes = new { @class = "form-control", @placeholder = "Órgão de Expedição", @maxlength = "30" } })
            @Html.ValidationMessageFor(model => model.OrgaoExpedicao, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-2">
            <label>UF Expedição</label>
            @Html.DropDownListFor(model => model.UFExpedicao, new List<SelectListItem>
            {
                new SelectListItem { Text = "Selecione", Value = "" },
                new SelectListItem { Text = "AC", Value = "AC" },
                new SelectListItem { Text = "AL", Value = "AL" },
                new SelectListItem { Text = "AM", Value = "AM" },
                new SelectListItem { Text = "AP", Value = "AP" },
                new SelectListItem { Text = "BA", Value = "BA" },
                new SelectListItem { Text = "CE", Value = "CE" },
                new SelectListItem { Text = "DF", Value = "DF" },
                new SelectListItem { Text = "ES", Value = "ES" },
                new SelectListItem { Text = "GO", Value = "GO" },
                new SelectListItem { Text = "MA", Value = "MA" },
                new SelectListItem { Text = "MG", Value = "MG" },
                new SelectListItem { Text = "MS", Value = "MS" },
                new SelectListItem { Text = "MT", Value = "MT" },
                new SelectListItem { Text = "PA", Value = "PA" },
                new SelectListItem { Text = "PB", Value = "PB" },
                new SelectListItem { Text = "PE", Value = "PE" },
                new SelectListItem { Text = "PI", Value = "PI" },
                new SelectListItem { Text = "PR", Value = "PR" },
                new SelectListItem { Text = "RJ", Value = "RJ" },
                new SelectListItem { Text = "RN", Value = "RN" },
                new SelectListItem { Text = "RO", Value = "RO" },
                new SelectListItem { Text = "RR", Value = "RR" },
                new SelectListItem { Text = "RS", Value = "RS" },
                new SelectListItem { Text = "SC", Value = "SC" },
                new SelectListItem { Text = "SE", Value = "SE" },
                new SelectListItem { Text = "SP", Value = "SP" },
                new SelectListItem { Text = "TO", Value = "TO" },
            },  new { @class = "form-control" })

        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-3">
            <label>Data Nascimento</label>
            @{ var dataNascimento = Model.DataNascimento.ToString("yyyy-MM-dd"); }
            @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @value = dataNascimento , @class = "form-control", @type = "date", @required = "required" } })
            @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-3">
            <label>Sexo</label>
            @Html.DropDownListFor(model => model.TipoSexo, new List<SelectListItem>
            {
                new SelectListItem { Text = "Selecione", Value = "" },
                new SelectListItem { Text = "Masculino", Value = "Masculino" },
                new SelectListItem { Text = "Feminino", Value = "Feminino" },
                new SelectListItem { Text = "Não declarar", Value = "Não declarar" },
            },  new { @class = "form-control", @required = "required" })
        </div>

        <div class="form-group col-md-3">
            <label>Estado Cívil</label>
            @Html.DropDownListFor(model => model.TipoEstadoCivil, new List<SelectListItem>
            {
                new SelectListItem { Text = "Selecione", Value = "" },
                new SelectListItem { Text = "Casado", Value = "Casado" },
                new SelectListItem { Text = "Solteiro", Value = "Solteiro" },
                new SelectListItem { Text = "Divorciado", Value = "Divorciado" },
                new SelectListItem { Text = "Viúvo", Value = "Viúvo" },
            },  new { @class = "form-control", @required = "required" })
        </div>
    </div>

    <h4>Endereço</h4>
    <div class="row">
        <div class="form-group col-md-2">
            <label>CEP</label>
            @Html.EditorFor(model => model.EnderecoCliente.CEP, new { htmlAttributes = new { @id = "txtCEP", @class = "form-control", @onkeypress = "return onlyNumbers(event)", @required = "required", @placeholder = "CEP", @maxlength = "9" } })
            @Html.ValidationMessageFor(model => model.EnderecoCliente.CEP, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-4">
            <label>Rua</label>
            @Html.EditorFor(model => model.EnderecoCliente.Logradouro, new { htmlAttributes = new { @id = "txtRua", @class = "form-control", @required = "required", @placeholder = "Rua", @maxlength = "100" } })
            @Html.ValidationMessageFor(model => model.EnderecoCliente.Logradouro, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-2">
            <label>Número</label>
            @Html.EditorFor(model => model.EnderecoCliente.Numero, new { htmlAttributes = new { @id = "txtNumero", @class = "form-control", @onkeypress = "return onlyNumbers(event)", @required = "required", @placeholder = "Número", @maxlength = "5" } })
            @Html.ValidationMessageFor(model => model.EnderecoCliente.Numero, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-3">
            <label>Complemento</label>
            @Html.EditorFor(model => model.EnderecoCliente.Complemento, new { htmlAttributes = new { @class = "form-control", @placeholder = "Complemento", @maxlength = "50" } })
            @Html.ValidationMessageFor(model => model.EnderecoCliente.Complemento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="row">
        <div class="form-group col-md-4">
            <label>Bairro</label>
            @Html.EditorFor(model => model.EnderecoCliente.Bairro, new { htmlAttributes = new { @id = "txtBairro", @class = "form-control", @required = "required", @placeholder = "Bairro", @maxlength = "50" } })
            @Html.ValidationMessageFor(model => model.EnderecoCliente.Bairro, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-4">
            <label>Cidade</label>
            @Html.EditorFor(model => model.EnderecoCliente.Cidade, new { htmlAttributes = new { @id = "txtCidade", @class = "form-control", @required = "required", @placeholder = "Cidade", @maxlength = "50" } })
            @Html.ValidationMessageFor(model => model.EnderecoCliente.Cidade, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-2">
            <label>UF</label>
            @Html.DropDownListFor(model => model.EnderecoCliente.UF, new List<SelectListItem>
            {
                new SelectListItem { Text = "Selecione", Value = "" },
                new SelectListItem { Text = "AC", Value = "AC" },
                new SelectListItem { Text = "AL", Value = "AL" },
                new SelectListItem { Text = "AM", Value = "AM" },
                new SelectListItem { Text = "AP", Value = "AP" },
                new SelectListItem { Text = "BA", Value = "BA" },
                new SelectListItem { Text = "CE", Value = "CE" },
                new SelectListItem { Text = "DF", Value = "DF" },
                new SelectListItem { Text = "ES", Value = "ES" },
                new SelectListItem { Text = "GO", Value = "GO" },
                new SelectListItem { Text = "MA", Value = "MA" },
                new SelectListItem { Text = "MG", Value = "MG" },
                new SelectListItem { Text = "MS", Value = "MS" },
                new SelectListItem { Text = "MT", Value = "MT" },
                new SelectListItem { Text = "PA", Value = "PA" },
                new SelectListItem { Text = "PB", Value = "PB" },
                new SelectListItem { Text = "PE", Value = "PE" },
                new SelectListItem { Text = "PI", Value = "PI" },
                new SelectListItem { Text = "PR", Value = "PR" },
                new SelectListItem { Text = "RJ", Value = "RJ" },
                new SelectListItem { Text = "RN", Value = "RN" },
                new SelectListItem { Text = "RO", Value = "RO" },
                new SelectListItem { Text = "RR", Value = "RR" },
                new SelectListItem { Text = "RS", Value = "RS" },
                new SelectListItem { Text = "SC", Value = "SC" },
                new SelectListItem { Text = "SE", Value = "SE" },
                new SelectListItem { Text = "SP", Value = "SP" },
                new SelectListItem { Text = "TO", Value = "TO" },
            },  new { @id = "ddlUF", @class = "form-control", @required = "required" })
        </div>
    </div>

    <div class="modal-footer">
        <div class="col-md-offset-2 col-md-10">
            @Html.ActionLink("Voltar", "Index", new { @class = "btn btn-danger" })
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
</div>
}
